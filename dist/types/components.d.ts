/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
export namespace Components {
    interface IstreeButton {
        /**
          * theme
         */
        "brand": boolean;
        /**
          * theme
         */
        "functional": boolean;
        /**
          * 顯示 loading 狀態
         */
        "isLoading": boolean;
        /**
          * theme
         */
        "outlined": boolean;
        /**
          * theme
         */
        "primary": boolean;
        /**
          * theme
         */
        "secondary": boolean;
        /**
          * theme
         */
        "tomato": boolean;
    }
}
declare global {
    interface HTMLIstreeButtonElement extends Components.IstreeButton, HTMLStencilElement {
    }
    var HTMLIstreeButtonElement: {
        prototype: HTMLIstreeButtonElement;
        new (): HTMLIstreeButtonElement;
    };
    interface HTMLElementTagNameMap {
        "istree-button": HTMLIstreeButtonElement;
    }
}
declare namespace LocalJSX {
    interface IstreeButton {
        /**
          * theme
         */
        "brand"?: boolean;
        /**
          * theme
         */
        "functional"?: boolean;
        /**
          * 顯示 loading 狀態
         */
        "isLoading"?: boolean;
        /**
          * theme
         */
        "outlined"?: boolean;
        /**
          * theme
         */
        "primary"?: boolean;
        /**
          * theme
         */
        "secondary"?: boolean;
        /**
          * theme
         */
        "tomato"?: boolean;
    }
    interface IntrinsicElements {
        "istree-button": IstreeButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "istree-button": LocalJSX.IstreeButton & JSXBase.HTMLAttributes<HTMLIstreeButtonElement>;
        }
    }
}
